//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CBR.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CBRDataWareHouseEntities : DbContext
    {
        public CBRDataWareHouseEntities()
            : base("name=CBRDataWareHouseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AppUser> AppUsers { get; set; }
        public virtual DbSet<AppUserClaim> AppUserClaims { get; set; }
        public virtual DbSet<AppUserLogin> AppUserLogins { get; set; }
        public virtual DbSet<AppUserRegistrationToken> AppUserRegistrationTokens { get; set; }
        public virtual DbSet<DimCallSchedule> DimCallSchedules { get; set; }
        public virtual DbSet<DimCustPeerGroup> DimCustPeerGroups { get; set; }
        public virtual DbSet<DimDate> DimDates { get; set; }
        public virtual DbSet<DimInstitutionBranch> DimInstitutionBranches { get; set; }
        public virtual DbSet<DimMDRM> DimMDRMs { get; set; }
        public virtual DbSet<DimReportingPeriodType> DimReportingPeriodTypes { get; set; }
        public virtual DbSet<DimStdPeerGroup> DimStdPeerGroups { get; set; }
        public virtual DbSet<DimStdPeerGroupDetail> DimStdPeerGroupDetails { get; set; }
        public virtual DbSet<DimUBPRConcept> DimUBPRConcepts { get; set; }
        public virtual DbSet<FactCustPGUBPRData> FactCustPGUBPRDatas { get; set; }
        public virtual DbSet<FactStdPGUBPRData> FactStdPGUBPRDatas { get; set; }
        public virtual DbSet<FactUBPRData> FactUBPRDatas { get; set; }
        public virtual DbSet<vwProjectNewDocCount> vwProjectNewDocCounts { get; set; }
        public virtual DbSet<AppFavoriteBank> AppFavoriteBanks { get; set; }
        public virtual DbSet<AppFavoriteSearch> AppFavoriteSearches { get; set; }
        public virtual DbSet<AppRole> AppRoles { get; set; }
        public virtual DbSet<AppUserRole> AppUserRoles { get; set; }
        public virtual DbSet<DimInstitution> DimInstitutions { get; set; }
        public virtual DbSet<AppProjectInfo> AppProjectInfoes { get; set; }
        public virtual DbSet<FactUBPRBenchmark> FactUBPRBenchmarks { get; set; }
        public virtual DbSet<FactUBPRBenchmarkThreshold> FactUBPRBenchmarkThresholds { get; set; }
        public virtual DbSet<DimCustPeerGroupDetail> DimCustPeerGroupDetails { get; set; }
        public virtual DbSet<AppCRAMModel> AppCRAMModels { get; set; }
        public virtual DbSet<AppCRAMAdjustBankData> AppCRAMAdjustBankDatas { get; set; }
        public virtual DbSet<AppCRAMRiskRating> AppCRAMRiskRatings { get; set; }
        public virtual DbSet<AppCRAMRiskRatingDefault> AppCRAMRiskRatingDefaults { get; set; }
        public virtual DbSet<AppStrategicForecastInputMetric> AppStrategicForecastInputMetrics { get; set; }
        public virtual DbSet<AppStrategicForecastScenario> AppStrategicForecastScenarios { get; set; }
        public virtual DbSet<AppStrategicForecastSummary> AppStrategicForecastSummaries { get; set; }
        public virtual DbSet<AppStrategicForecastInputData> AppStrategicForecastInputDatas { get; set; }
        public virtual DbSet<AppHomePageContent> AppHomePageContents { get; set; }
        public virtual DbSet<AppStrategicForecastSummaryScenario> AppStrategicForecastSummaryScenarios { get; set; }
        public virtual DbSet<AppInfoCenterImage> AppInfoCenterImages { get; set; }
        public virtual DbSet<AppCRAMRiskCategory> AppCRAMRiskCategories { get; set; }
        public virtual DbSet<AppManageCDRate> AppManageCDRates { get; set; }
        public virtual DbSet<AppCDOrder> AppCDOrders { get; set; }
        public virtual DbSet<AppTenant> AppTenants { get; set; }
        public virtual DbSet<KriMetricMaster> KriMetricMasters { get; set; }
        public virtual DbSet<RptCBRRiskRadarChartDetail> RptCBRRiskRadarChartDetails { get; set; }
        public virtual DbSet<RptCBRRiskRadarUserMetricmapping> RptCBRRiskRadarUserMetricmappings { get; set; }
        public virtual DbSet<DataRefreshTimePeriod> DataRefreshTimePeriods { get; set; }
        public virtual DbSet<AppAccessControl> AppAccessControls { get; set; }
        public virtual DbSet<AppModule> AppModules { get; set; }
        public virtual DbSet<DataRefreshUpdate> DataRefreshUpdates { get; set; }
        public virtual DbSet<AppStorage> AppStorages { get; set; }
        public virtual DbSet<ForumConfig> ForumConfigs { get; set; }
    
        public virtual int uspDimDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDimDate");
        }
    
        public virtual int uspDimInstitution(Nullable<int> packageKey)
        {
            var packageKeyParameter = packageKey.HasValue ?
                new ObjectParameter("PackageKey", packageKey) :
                new ObjectParameter("PackageKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDimInstitution", packageKeyParameter);
        }
    
        public virtual int uspDimInstitutionBranch(Nullable<int> packageKey)
        {
            var packageKeyParameter = packageKey.HasValue ?
                new ObjectParameter("PackageKey", packageKey) :
                new ObjectParameter("PackageKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDimInstitutionBranch", packageKeyParameter);
        }
    
        public virtual int uspDimStdPeerGroup(Nullable<int> packageKey)
        {
            var packageKeyParameter = packageKey.HasValue ?
                new ObjectParameter("PackageKey", packageKey) :
                new ObjectParameter("PackageKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDimStdPeerGroup", packageKeyParameter);
        }
    
        public virtual int uspDimUBPRConcept(Nullable<int> packageKey)
        {
            var packageKeyParameter = packageKey.HasValue ?
                new ObjectParameter("PackageKey", packageKey) :
                new ObjectParameter("PackageKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDimUBPRConcept", packageKeyParameter);
        }
    
        public virtual int uspDimUBPRConceptUpdate(Nullable<int> packageKey)
        {
            var packageKeyParameter = packageKey.HasValue ?
                new ObjectParameter("PackageKey", packageKey) :
                new ObjectParameter("PackageKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDimUBPRConceptUpdate", packageKeyParameter);
        }
    
        public virtual int uspFactCustPGUBPRData(Nullable<int> packageKey)
        {
            var packageKeyParameter = packageKey.HasValue ?
                new ObjectParameter("PackageKey", packageKey) :
                new ObjectParameter("PackageKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspFactCustPGUBPRData", packageKeyParameter);
        }
    
        public virtual int uspFactStdPGUBPRData(Nullable<int> packageKey)
        {
            var packageKeyParameter = packageKey.HasValue ?
                new ObjectParameter("PackageKey", packageKey) :
                new ObjectParameter("PackageKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspFactStdPGUBPRData", packageKeyParameter);
        }
    
        public virtual int uspDimCustPeerGroupDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDimCustPeerGroupDetail");
        }
    
        public virtual int CreatePeerGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreatePeerGroup");
        }
    }
}
